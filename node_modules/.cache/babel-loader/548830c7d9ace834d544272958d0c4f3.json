{"ast":null,"code":"var _jsxFileName = \"/Users/roxieschnoor/Desktop/sei/projects/Clique/clique-frontend/clique/src/Components/PostInfo.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostInfo({\n  match\n}) {\n  _s();\n\n  const [info, setInfo] = useState([]);\n  const [comment, setComment] = useState([]);\n\n  const getInfo = async () => {\n    const response = await fetch(`http://localhost:8000/api/posts/${match.params.id}`);\n    const data = await response.json();\n    console.log(data);\n    setInfo(data);\n  };\n\n  const deletePost = async () => {\n    const url = `http://localhost:8000/api/posts/${match.params.id}`;\n    axios.delete(url);\n  };\n\n  const getComment = async () => {\n    const response = await fetch(`http://localhost:8000/api/comments/${match.params.post}/`);\n    const data = await response.json();\n    setComment(data);\n  };\n\n  useEffect(() => {\n    getInfo();\n    getComment();\n  }, []);\n  let postComments = comment.map(feed => {\n    const {\n      author,\n      body,\n      created\n    } = feed;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"commentSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), \" \", body, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailCard\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '35.1rem'\n      },\n      className: \"detailPost\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"detailTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"detailImage\",\n        variant: \"top\",\n        src: info.post_pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"detailInfo\",\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [info.author, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), \" \", info.caption, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"date\",\n            children: info.created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), postComments]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `comment/${info.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editButton\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `editpost/${info.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editButton\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/myprofile\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"deleteButton\",\n        onClick: () => {\n          deletePost();\n          getInfo();\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n}\n\n_s(PostInfo, \"5624SoL4rf2hgt00teTvx8mlG1w=\");\n\n_c = PostInfo;\nexport default PostInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostInfo\");","map":{"version":3,"sources":["/Users/roxieschnoor/Desktop/sei/projects/Clique/clique-frontend/clique/src/Components/PostInfo.js"],"names":["axios","React","useState","useEffect","Card","Link","PostInfo","match","info","setInfo","comment","setComment","getInfo","response","fetch","params","id","data","json","console","log","deletePost","url","delete","getComment","post","postComments","map","feed","author","body","created","width","post_pic","caption"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction PostInfo({ match }) {\n\n    const [info, setInfo] = useState([]);\n    const [comment, setComment] = useState([]);\n\n    const getInfo = async () => {\n        const response = await fetch(`http://localhost:8000/api/posts/${match.params.id}`);\n        const data = await response.json();\n        console.log(data)\n        setInfo(data)\n    }\n\n    const deletePost = async () => {\n        const url = `http://localhost:8000/api/posts/${match.params.id}`\n        axios.delete(url);\n    }\n\n    const getComment = async () => {\n        const response = await fetch(`http://localhost:8000/api/comments/${match.params.post}/`);\n        const data = await response.json();\n        setComment(data)\n    }\n\n    useEffect(() => {\n        getInfo()\n        getComment()\n    }, []);\n\n    let postComments = comment.map((feed) => {\n        const {author, body, created} = feed\n\n        return (\n            <div>\n            <Card.Text className=\"commentSection\">\n                        <strong>{author}</strong> {body} <br /><span className=\"date\">{created}</span>\n                    </Card.Text>\n                    \n                </div>\n        )})\n\n    \n\n        return (\n            <div className=\"detailCard\">\n                <Card style={{ width: '35.1rem'}} className=\"detailPost\">\n                <Card.Title className=\"detailTitle\"><strong>{info.author}</strong></Card.Title>\n                    <Card.Img className=\"detailImage\" variant=\"top\" src={info.post_pic} />\n                    <Card.Body className=\"detailInfo\">\n                        <Card.Text>\n                        <strong>{info.author} </strong> {info.caption} <br /><span className=\"date\">{info.created}</span>\n                        </Card.Text>\n                        </Card.Body>\n                        {postComments}\n                    </Card>\n                    \n\n\n                <Link to={`comment/${info.id}`}><button className=\"editButton\">Comment</button></Link>\n                <Link to={`editpost/${info.id}`}><button className=\"editButton\">Edit</button></Link>\n                <Link to='/myprofile'><button className=\"deleteButton\" onClick={() => {\n                deletePost()\n                getInfo()\n            }}>Delete</button></Link>\n            </div>\n        )}\n   \n\n\nexport default PostInfo;"]},"metadata":{},"sourceType":"module"}
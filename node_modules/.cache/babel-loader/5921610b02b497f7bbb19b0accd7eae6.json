{"ast":null,"code":"var _jsxFileName = \"/Users/roxieschnoor/Desktop/sei/projects/Clique/clique-frontend/clique/src/Components/PostInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostInfo({\n  match\n}) {\n  _s();\n\n  const [info, setInfo] = useState([]);\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  const getInfo = async () => {\n    const response = await fetch(`http://localhost:8000/api/posts/${match.params.id}`);\n    const data = await response.json();\n    setInfo(data);\n    console.log(info);\n  };\n\n  if (!info) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  } else {\n    let postDetails = info.map(item => {\n      const {\n        post_pic,\n        author,\n        caption,\n        created\n      } = item;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedCards\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '35.1rem'\n          },\n          className: \"singlePost\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n            className: \"postImage\",\n            variant: \"top\",\n            src: post_pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"postInfo\",\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [author, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 25\n              }, this), \" \", caption, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: created\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostInfo, \"+1zfbqR6+rdUDHAscg9cjUhEYtk=\");\n\n_c = PostInfo;\nexport default PostInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostInfo\");","map":{"version":3,"sources":["/Users/roxieschnoor/Desktop/sei/projects/Clique/clique-frontend/clique/src/Components/PostInfo.js"],"names":["React","useState","useEffect","Card","PostInfo","match","info","setInfo","getInfo","response","fetch","params","id","data","json","console","log","postDetails","map","item","post_pic","author","caption","created","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCL,KAAK,CAACM,MAAN,CAAaC,EAAG,EAApD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH,GALD;;AAOA,MAAI,CAACA,IAAL,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACP,QAAIW,WAAW,GAAGX,IAAI,CAACY,GAAL,CAAUC,IAAD,IAAU;AACjC,YAAM;AAACC,QAAAA,QAAD;AAAWC,QAAAA,MAAX;AAAmBC,QAAAA,OAAnB;AAA4BC,QAAAA;AAA5B,UAAuCJ,IAA7C;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAkC,UAAA,SAAS,EAAC,YAA5C;AAAA,kCACA,QAAC,IAAD,CAAM,KAAN;AAAA,mCAAY;AAAA,wBAASH;AAAT;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,SAAS,EAAC,WAApB;AAAgC,YAAA,OAAO,EAAC,KAAxC;AAA8C,YAAA,GAAG,EAAED;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,UAArB;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACA;AAAA,2BAASC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,OAC4BC,OAD5B,oBACqC;AAAA;AAAA;AAAA;AAAA,sBADrC,eAC2C;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwBC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAfiB,CAAlB;AAeG;;AAEH,sBACI;AAAA,iCACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxCQnB,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from 'react-bootstrap';\n\nfunction PostInfo({ match }) {\n\n    const [info, setInfo] = useState([]);\n    \n    useEffect(() => {\n        getInfo()\n    }, []);\n\n    const getInfo = async () => {\n        const response = await fetch(`http://localhost:8000/api/posts/${match.params.id}`);\n        const data = await response.json();\n        setInfo(data)\n        console.log(info)\n    }\n\n    if (!info) {\n        return <h2>Loading</h2>\n    } else {\n    let postDetails = info.map((item) => {\n        const {post_pic, author, caption, created} = item\n        return (\n            <div className=\"feedCards\">\n                <Card style={{ width: '35.1rem'}} className=\"singlePost\">\n                <Card.Title><strong>{author}</strong></Card.Title>\n                    <Card.Img className=\"postImage\" variant=\"top\" src={post_pic} />\n                    <Card.Body className=\"postInfo\">\n                        <Card.Text>\n                        <strong>{author}:</strong> {caption} <br /><span className=\"date\">{created}</span>\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n            </div>\n        )\n    })}\n\n    return(\n        <div>\n        {/* {postDetails} */} <p>Hello World</p>\n        </div>\n    )\n}\n\nexport default PostInfo;"]},"metadata":{},"sourceType":"module"}